<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.ShopauditMapper">

    <resultMap type="com.platform.entity.ShopauditEntity" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="shopname" column="shopname"/>
        <result property="type" column="type"/>
        <result property="business" column="business"/>
        <result property="brand" column="brand"/>
        <result property="aptitude" column="aptitude"/>
        <result property="adminname" column="adminname"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="state" column="state"/>
        <result property="creattime" column="creatTime"/>
        <result property="userid" column="userId"/>
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
	    `id`,
	    `shopname`,
	    `type`,
	    `business`,
	    `brand`,
	    `aptitude`,
	    `adminname`,
	    `phone`,
	    `email`,
	    `state`,
	    `creatTime`,
	    `userId`
  	</sql>


    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.platform.entity.example.ShopauditExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from nideshop_shopaudit
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <if test="pageStart!=null and pageStart gt -1" >
            limit ${pageStart},${pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from nideshop_shopaudit
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from nideshop_shopaudit
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.platform.entity.example.ShopauditExample" >
        delete from nideshop_shopaudit
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <delete id="deleteBatch">
        delete from nideshop_shopaudit where id in
<foreach item="id" collection="array" open="(" separator="," close=")">
          #{id}
</foreach>
    </delete>
    <insert id="insert" parameterType="com.platform.entity.ShopauditEntity" useGeneratedKeys="true" keyProperty="id">
		insert into nideshop_shopaudit(
          `shopname`,
          `type`,
          `business`,
          `brand`,
          `aptitude`,
          `adminname`,
          `phone`,
          `email`,
          `state`,
          `creatTime`,
          `userId`        )
		values(
          #{shopname},
          #{type},
          #{business},
          #{brand},
          #{aptitude},
          #{adminname},
          #{phone},
          #{email},
          #{state},
          #{creattime},
          #{userid}         )
	</insert>


    <insert id="insertSelective" parameterType="com.platform.entity.ShopauditEntity" useGeneratedKeys="true" keyProperty="id">
        insert into nideshop_shopaudit
        <trim prefix="(" suffix=")" suffixOverrides="," >
          <if test="shopname != null">
            `shopname`,
          </if>
          <if test="type != null">
            `type`,
          </if>
          <if test="business != null">
            `business`,
          </if>
          <if test="brand != null">
            `brand`,
          </if>
          <if test="aptitude != null">
            `aptitude`,
          </if>
          <if test="adminname != null">
            `adminname`,
          </if>
          <if test="phone != null">
            `phone`,
          </if>
          <if test="email != null">
            `email`,
          </if>
          <if test="state != null">
            `state`,
          </if>
          <if test="creattime != null">
            `creatTime`,
          </if>
          <if test="userid != null">
            `userId`
          </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="shopname != null">
              #{shopname},
            </if>
            <if test="type != null">
              #{type},
            </if>
            <if test="business != null">
              #{business},
            </if>
            <if test="brand != null">
              #{brand},
            </if>
            <if test="aptitude != null">
              #{aptitude},
            </if>
            <if test="adminname != null">
              #{adminname},
            </if>
            <if test="phone != null">
              #{phone},
            </if>
            <if test="email != null">
              #{email},
            </if>
            <if test="state != null">
              #{state},
            </if>
            <if test="creattime != null">
              #{creattime},
            </if>
            <if test="userid != null">
              #{userid}
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.platform.entity.example.ShopauditExample" resultType="java.lang.Integer" >
        select count(*) from nideshop_shopaudit
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update nideshop_shopaudit
        <set>
          <if test="shopname != null">
              `shopname` = #{shopname},
          </if>
          <if test="type != null">
              `type` = #{type},
          </if>
          <if test="business != null">
              `business` = #{business},
          </if>
          <if test="brand != null">
              `brand` = #{brand},
          </if>
          <if test="aptitude != null">
              `aptitude` = #{aptitude},
          </if>
          <if test="adminname != null">
              `adminname` = #{adminname},
          </if>
          <if test="phone != null">
              `phone` = #{phone},
          </if>
          <if test="email != null">
              `email` = #{email},
          </if>
          <if test="state != null">
              `state` = #{state},
          </if>
          <if test="creattime != null">
              `creatTime` = #{creattime},
          </if>
          <if test="userid != null">
              `userId` = #{userid}
          </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update nideshop_shopaudit
        <set>
          `shopname` = #{shopname},
          `type` = #{type},
          `business` = #{business},
          `brand` = #{brand},
          `aptitude` = #{aptitude},
          `adminname` = #{adminname},
          `phone` = #{phone},
          `email` = #{email},
          `state` = #{state},
          `creatTime` = #{creattime},
          `userId` = #{userid}
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.platform.entity.ShopauditEntity">
        update nideshop_shopaudit
        <set>
          <if test="shopname != null">
            `shopname` = #{shopname},
          </if>
          <if test="type != null">
            `type` = #{type},
          </if>
          <if test="business != null">
            `business` = #{business},
          </if>
          <if test="brand != null">
            `brand` = #{brand},
          </if>
          <if test="aptitude != null">
            `aptitude` = #{aptitude},
          </if>
          <if test="adminname != null">
            `adminname` = #{adminname},
          </if>
          <if test="phone != null">
            `phone` = #{phone},
          </if>
          <if test="email != null">
            `email` = #{email},
          </if>
          <if test="state != null">
            `state` = #{state},
          </if>
          <if test="creattime != null">
            `creatTime` = #{creattime},
          </if>
          <if test="userid != null">
            `userId` = #{userid}
          </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.platform.entity.ShopauditEntity" >
        update nideshop_shopaudit
        <set>
            `shopname` = #{shopname},
            `type` = #{type},
            `business` = #{business},
            `brand` = #{brand},
            `aptitude` = #{aptitude},
            `adminname` = #{adminname},
            `phone` = #{phone},
            `email` = #{email},
            `state` = #{state},
            `creatTime` = #{creattime},
            `userId` = #{userid}
        </set>
        where id = #{id,jdbcType=BIGINT}
  </update>


    <select id="queryList" resultType="com.platform.entity.ShopauditEntity">
        select
          `id`,
          `shopname`,
          `type`,
          `business`,
          `brand`,
          `aptitude`,
          `adminname`,
          `phone`,
          `email`,
          `state`,
          `creatTime`,
          `userId`
        from nideshop_shopaudit
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from nideshop_shopaudit
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
    </select>
</mapper>