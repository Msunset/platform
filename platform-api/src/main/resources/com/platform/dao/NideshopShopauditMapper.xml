<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.dao.NideshopShopauditMapper">
  <resultMap id="BaseResultMap" type="com.platform.entity.NideshopShopaudit">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="shopname" jdbcType="VARCHAR" property="shopname" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="business" jdbcType="VARCHAR" property="business" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="aptitude" jdbcType="VARCHAR" property="aptitude" />
    <result column="adminname" jdbcType="VARCHAR" property="adminname" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="creatTime" jdbcType="TIMESTAMP" property="creattime" />
    <result column="userId" jdbcType="VARCHAR" property="userid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, shopname, type, business, brand, aptitude, adminname, phone, email, state, creatTime, 
    userId
  </sql>
  <select id="selectByExample" parameterType="com.platform.entity.NideshopShopauditExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nideshop_shopaudit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.platform.entity.NideshopShopauditExample">
    delete from nideshop_shopaudit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platform.entity.NideshopShopaudit">
    insert into nideshop_shopaudit (id, shopname, type, 
      business, brand, aptitude, 
      adminname, phone, email, 
      state, creatTime, userId
      )
    values (#{id,jdbcType=INTEGER}, #{shopname,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{business,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, #{aptitude,jdbcType=VARCHAR}, 
      #{adminname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{creattime,jdbcType=TIMESTAMP}, #{userid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.platform.entity.NideshopShopaudit">
    insert into nideshop_shopaudit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shopname != null">
        shopname,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="business != null">
        business,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="aptitude != null">
        aptitude,
      </if>
      <if test="adminname != null">
        adminname,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="creattime != null">
        creatTime,
      </if>
      <if test="userid != null">
        userId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shopname != null">
        #{shopname,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="business != null">
        #{business,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="aptitude != null">
        #{aptitude,jdbcType=VARCHAR},
      </if>
      <if test="adminname != null">
        #{adminname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="creattime != null">
        #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.platform.entity.NideshopShopauditExample" resultType="java.lang.Long">
    select count(*) from nideshop_shopaudit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nideshop_shopaudit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shopname != null">
        shopname = #{record.shopname,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.business != null">
        business = #{record.business,jdbcType=VARCHAR},
      </if>
      <if test="record.brand != null">
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.aptitude != null">
        aptitude = #{record.aptitude,jdbcType=VARCHAR},
      </if>
      <if test="record.adminname != null">
        adminname = #{record.adminname,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.creattime != null">
        creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nideshop_shopaudit
    set id = #{record.id,jdbcType=INTEGER},
      shopname = #{record.shopname,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      business = #{record.business,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      aptitude = #{record.aptitude,jdbcType=VARCHAR},
      adminname = #{record.adminname,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      userId = #{record.userid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>